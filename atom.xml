<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>北半球的盛夏&#39;s Space</title>
  
  <subtitle>分享知识，分享生活，分享快乐</subtitle>
  <link href="https://midsummerwang.github.io/atom.xml" rel="self"/>
  
  <link href="https://midsummerwang.github.io/"/>
  <updated>2023-09-18T12:45:03.350Z</updated>
  <id>https://midsummerwang.github.io/</id>
  
  <author>
    <name>北半球的盛夏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue 学习记录(一)</title>
    <link href="https://midsummerwang.github.io/6407.html"/>
    <id>https://midsummerwang.github.io/6407.html</id>
    <published>2023-09-17T10:54:37.000Z</published>
    <updated>2023-09-18T12:45:03.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><ul><li>插值语法 -用于解析<strong>标签体</strong></li><li>指令语法 -用于解析标签(包括<strong>属性</strong>、标签体等)</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello, &#123;&#123;str.toUpperCase()&#125;&#125;, today &#123;&#123;Date.now()&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法：<span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;文本&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text1&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;school.str&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&#x27;#test1&#x27;</span>,                      <span class="comment">//用于指定vue实例为哪个容器服务</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">str</span>: <span class="string">&quot;summer&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="string">&quot;https://www.baidu.com&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">school</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                      <span class="attr">str</span>: <span class="string">&quot;spring&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>v-bind：将url作为表达式解析，读取实例中的url值，可简写为’:’</p></li><li><p>Vue实例与容器：一对一的关系，一个Vue实例服务一个容器，一个容器对应一个Vue实例</p></li></ul><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><ul><li>v-bind：最大的特点是单向数据绑定，数据只能从data流向页面</li><li>v-model：指令语法，<strong>数据双向绑定</strong><ul><li>数据不仅能从data流向页面，还可以从页面流向data</li><li>双向绑定一般都应用在表单元素上（拥有value属性，捕获用户输入的数据）</li><li>v-model:value：可简写为v-model，默认收集的就是value值</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;文本&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text2&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;school.str&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><ul><li>由一个对象操作另一个对象的属性</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj1   = &#123;</span><br><span class="line">    x :<span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">y</span>:<span class="number">1000</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj2, <span class="string">&#x27;x&#x27;</span>, &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>) &#123;                <span class="comment">//getter，读取</span></span><br><span class="line">        <span class="keyword">return</span> obj1.<span class="property">x</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>) &#123;           <span class="comment">//setter，修改</span></span><br><span class="line">        obj1.<span class="property">x</span> = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Vue中的数据代理"><a href="#Vue中的数据代理" class="headerlink" title="Vue中的数据代理"></a>Vue中的数据代理</h3><p><img src="https://cdn.jsdelivr.net/gh/midsummerwang/imagehosting@main/image/image-20230918200358318.png"></p><p><img src="https://cdn.jsdelivr.net/gh/midsummerwang/imagehosting@main/image/image-20230918195722307.png"></p><ul><li>图中vm对象中的name属性其实是<strong>通过Object.defineProperty添加的</strong>，并不是Vue实例中定义的name属性，<strong>Vue实例中定义的属性存在了vm中的<code>_data</code>属性中</strong><ul><li>当读取vm对象中的name属性，实际是通过vm的getter获取<code>_data</code>中的name属性值</li><li>当修改vm对象中的name属性值，实际是通过vm的setter修改<code>_data</code>中的name属性值</li><li>即在Vue中，通过vm中的<code>name</code>属性操作<code>_data</code>中的<code>name</code>属性(也就是Vue实例中定义的<code>name</code>属性)实现数据代理</li><li>如果Vue不做数据代理，就需要通过<code>_data.属性名</code>的方式绑定数据</li></ul></li></ul><p>未完……</p>]]></content>
    
    
    <summary type="html">记录Vue框架从零开始学习的历程，包括但不限于一些总结、遇到的问题......</summary>
    
    
    
    <category term="学习记录" scheme="https://midsummerwang.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Vue框架" scheme="https://midsummerwang.github.io/tags/Vue%E6%A1%86%E6%9E%B6/"/>
    
    <category term="前端开发框架" scheme="https://midsummerwang.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
</feed>
